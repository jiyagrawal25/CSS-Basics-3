*{
    box-sizing: border-box;
}
/* universal selector */

.container{
    height: 400px;
    border: 2px solid green;

    display: flex;

    /* flex-direction: column;
    flex-direction: row;
    flex-direction: column-reverse;
    flex-direction: row-reverse;

    flex-wrap: wrap;
    flex-wrap: nowrap; 
    flex-wrap: wrap-reverse; */
    flex-wrap: wrap;

    /* flex-flow: column nowrap; */

    justify-content: flex-start;
    justify-content: flex-end;
    justify-content: center;
    justify-content: space-around;
    justify-content: space-between;
    justify-content: space-evenly;

    align-items: flex-start;
    align-items: flex-end;
    align-items: center;
    align-items: stretch;
    align-items: baseline ;


    justify-content: center;
    align-items: center;
    /* gap: 10px; */


    align-content: flex-start;
    align-content: flex-end;
    align-content: center;
    align-content: space-around;
    align-content: space-between;
    align-content: space-evenly;
}
/* kisi container ko flexbox mein convert karne ke liye we use display:flex */

/* main axis is by default in horizontal direction isliye saare elements horizontally display hone lage display:flex karne se */

/* flex-direction se hum direction change kar sakte hain elements ki aur flex-direction:column karne se hum main axis aur cross axis ko exchange kar sakte hain*/

/* flex-wrap se hum width ko intact/preserve rakh sakte hain as much as possible */

/* flex-flow se hum flex-direction aur flex-wrap property ek saath de sakte hain */

/* justify-content main axis ke according items ko align karta hai */
/* justify-content:flex-start se saari ki saari items starting mein place ho jaengi, main axis ke left side mein place ho jaengi and vice versa for justify-content:flex-end */
/* center se saare elements beech mein place ho jaenge aur justify-content:space-around se equal equal spacing aa jaegi har item ke beech (sirf beech mein equal space aaegi left side aur right side mein nhi aaegi space-evenly se har jagah same space aaegi) */
/* space-between mein sirf beech mein space aaega left aur right mein nhi aaega */

/* align-items cross axis(vertical axis) ke according items ko align karta hai */
/* by default value of align-items is stretch */

/* to bring the items and their contentin center we have to set two properties as centre, first--> justify-content:center and align-items:center */

/* flex item ke rows ke beech ka space manage karne ke liye we use align-content */

.box{
    border: 1px solid brown;
    background-color: aquamarine;
    width: 100px;
    flex-basis:50% ;
    /* flex-grow: 1; */
}
/* flex-grow 1 karne se saare flex-items ne grow karke equal width le li */
/* flex-basis is used to give the width it is similar to the width property lekin hamara text agar block ke size se bada hai(overflow condition) toh agar hum width property use karte hain toh hamara extra content hide ho jaega lekin flex-basis use karne se humey pura content display hoga, responsive ban jaega*/

#box1{
    order: 1;
    /* flex-grow: 1;
    flex-shrink: 4; */
    align-self: flex-start;
}
/* by default order 0 hota hai toh order:1 karne se box1 sabse peeche chala jaega */
/* kisi particular box ki width badi karni ho toh bhi flex-grow use kar sakte yahan box1 ne pura space kha liya since humne usme flex-grow 1 kar diya */

#box3{
    order:8;
    /* flex-shrink: 2; */
    align-self: flex-end;
}
/* box3 ko agar box1 ke aage bhejna hai toh kuch bhi order de sakte hain 1 se bada toh humne yahaan 8 de diya */
/* flex-shrink is used to set the shrinking speed of a flex-item */

#box2{
    order:7;
    align-self: stretch;
}
/* agar humey box2 ko box1 aur box3 ke beech mein laana hai toh hum 1 se 8 ke beech mein kuch bhi order de sakte hain box2 ka */
/* align-self stretch karne se box2 purey mein stretch ho jaega aise hi box3 mein usey flex-end set karne se box 3 niche pahuch jaega aur flex-start karne se box1 upar pahuch jaega */